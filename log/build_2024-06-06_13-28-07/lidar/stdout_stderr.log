[ 50%] [32mBuilding CXX object CMakeFiles/lidar_udp_publisher.dir/src/lidar_udp_to_topic.cpp.o[0m
[01m[K/home/steffens/KITrain/src/ki_train/sensors/lidar/src/lidar_udp_to_topic.cpp:[m[K In member function â€˜[01m[Kvoid LidarUDPPublisher::publishBoundingBoxes(const std::vector<lidar_msgs::msg::GroundTruth_<std::allocator<void> >, std::allocator<lidar_msgs::msg::GroundTruth_<std::allocator<void> > > >&)[m[Kâ€™:
[01m[K/home/steffens/KITrain/src/ki_train/sensors/lidar/src/lidar_udp_to_topic.cpp:247:45:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KtoMsg[m[Kâ€™ is not a member of â€˜[01m[Ktf2[m[Kâ€™
  247 |         boundingbox.pose.orientation = tf2::[01;31m[KtoMsg[m[K(tf2::Quaternion(0, 0, groundTruth.yaw));
      |                                             [01;31m[K^~~~~[m[K
[01m[K/home/steffens/KITrain/src/ki_train/sensors/lidar/src/lidar_udp_to_topic.cpp:247:88:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Ktf2::Quaternion::Quaternion(int, int, const _yaw_type&)[m[Kâ€™
  247 |         boundingbox.pose.orientation = tf2::toMsg(tf2::Quaternion(0, 0, groundTruth.yaw[01;31m[K)[m[K);
      |                                                                                        [01;31m[K^[m[K
In file included from [01m[K/home/steffens/KITrain/src/ki_train/sensors/lidar/src/lidar_udp_to_topic.cpp:11[m[K:
[01m[K/opt/ros/humble/include/tf2/tf2/LinearMath/Quaternion.h:46:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktf2::Quaternion::Quaternion(const tf2::Vector3&, const tf2Scalar&)[m[Kâ€™
   46 |         [01;36m[KQuaternion[m[K(const Vector3& axis, const tf2Scalar& angle)
      |         [01;36m[K^~~~~~~~~~[m[K
[01m[K/opt/ros/humble/include/tf2/tf2/LinearMath/Quaternion.h:46:9:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 3 provided
[01m[K/opt/ros/humble/include/tf2/tf2/LinearMath/Quaternion.h:39:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktf2::Quaternion::Quaternion(const tf2Scalar&, const tf2Scalar&, const tf2Scalar&, const tf2Scalar&)[m[Kâ€™
   39 |         [01;36m[KQuaternion[m[K(const tf2Scalar& x, const tf2Scalar& y, const tf2Scalar& z, const tf2Scalar& w)
      |         [01;36m[K^~~~~~~~~~[m[K
[01m[K/opt/ros/humble/include/tf2/tf2/LinearMath/Quaternion.h:39:9:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 3 provided
[01m[K/opt/ros/humble/include/tf2/tf2/LinearMath/Quaternion.h:33:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktf2::Quaternion::Quaternion()[m[Kâ€™
   33 |         [01;36m[KQuaternion[m[K() {}
      |         [01;36m[K^~~~~~~~~~[m[K
[01m[K/opt/ros/humble/include/tf2/tf2/LinearMath/Quaternion.h:33:9:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 3 provided
[01m[K/opt/ros/humble/include/tf2/tf2/LinearMath/Quaternion.h:29:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kconstexpr tf2::Quaternion::Quaternion(const tf2::Quaternion&)[m[Kâ€™
   29 | class [01;36m[KQuaternion[m[K : public QuadWord {
      |       [01;36m[K^~~~~~~~~~[m[K
[01m[K/opt/ros/humble/include/tf2/tf2/LinearMath/Quaternion.h:29:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 3 provided
[01m[K/opt/ros/humble/include/tf2/tf2/LinearMath/Quaternion.h:29:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kconstexpr tf2::Quaternion::Quaternion(tf2::Quaternion&&)[m[Kâ€™
[01m[K/opt/ros/humble/include/tf2/tf2/LinearMath/Quaternion.h:29:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 3 provided
gmake[2]: *** [CMakeFiles/lidar_udp_publisher.dir/build.make:76: CMakeFiles/lidar_udp_publisher.dir/src/lidar_udp_to_topic.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/lidar_udp_publisher.dir/all] Error 2
gmake: *** [Makefile:146: all] Error 2
